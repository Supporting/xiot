#include "X3DSwitch.h"
#include "X3DAttributes.h"
#include "X3DTypes.h"
#include "X3DNodeHandler.h"
#include <iostream>
#include <cassert>

using namespace std;

namespace X3D {

X3DSwitch::X3DSwitch()
: _handler(NULL)
{
}

X3DSwitch::~X3DSwitch()
{
}

void X3DSwitch::setNodeHandler(X3DNodeHandler *handler)
{
   this->_handler = handler;
}
// START GENERATED
int X3DSwitch::doStartElement(int id, const X3DAttributes& attr) const
{
	assert(_handler);

	switch(id)
	{
	case Shape:
		return _handler->startShape(attr);
	case Appearance:
		return _handler->startAppearance(attr);
	case Material:
		return _handler->startMaterial(attr);
	case IndexedFaceSet:
		return _handler->startIndexedFaceSet(attr);
	case ProtoInstance:
		return _handler->startProtoInstance(attr);
	case Transform:
		return _handler->startTransform(attr);
	case ImageTexture:
		return _handler->startImageTexture(attr);
	case TextureTransform:
		return _handler->startTextureTransform(attr);
	case Coordinate:
		return _handler->startCoordinate(attr);
	case Normal:
		return _handler->startNormal(attr);
	case Color:
		return _handler->startColor(attr);
	case ColorRGBA:
		return _handler->startColorRGBA(attr);
	case TextureCoordinate:
		return _handler->startTextureCoordinate(attr);
	case ROUTE:
		return _handler->startROUTE(attr);
	case fieldValue:
		return _handler->startfieldValue(attr);
	case Group:
		return _handler->startGroup(attr);
	case LOD:
		return _handler->startLOD(attr);
	case Switch:
		return _handler->startSwitch(attr);
	case Script:
		return _handler->startScript(attr);
	case IndexedTriangleFanSet:
		return _handler->startIndexedTriangleFanSet(attr);
	case IndexedTriangleSet:
		return _handler->startIndexedTriangleSet(attr);
	case IndexedTriangleStripSet:
		return _handler->startIndexedTriangleStripSet(attr);
	case MultiTexture:
		return _handler->startMultiTexture(attr);
	case MultiTextureCoordinate:
		return _handler->startMultiTextureCoordinate(attr);
	case MultiTextureTransform:
		return _handler->startMultiTextureTransform(attr);
	case IndexedLineSet:
		return _handler->startIndexedLineSet(attr);
	case PointSet:
		return _handler->startPointSet(attr);
	case StaticGroup:
		return _handler->startStaticGroup(attr);
	case Sphere:
		return _handler->startSphere(attr);
	case Box:
		return _handler->startBox(attr);
	case Cone:
		return _handler->startCone(attr);
	case Anchor:
		return _handler->startAnchor(attr);
	case Arc2D:
		return _handler->startArc2D(attr);
	case ArcClose2D:
		return _handler->startArcClose2D(attr);
	case AudioClip:
		return _handler->startAudioClip(attr);
	case Background:
		return _handler->startBackground(attr);
	case Billboard:
		return _handler->startBillboard(attr);
	case BooleanFilter:
		return _handler->startBooleanFilter(attr);
	case BooleanSequencer:
		return _handler->startBooleanSequencer(attr);
	case BooleanToggle:
		return _handler->startBooleanToggle(attr);
	case BooleanTrigger:
		return _handler->startBooleanTrigger(attr);
	case Circle2D:
		return _handler->startCircle2D(attr);
	case Collision:
		return _handler->startCollision(attr);
	case ColorInterpolator:
		return _handler->startColorInterpolator(attr);
	case Contour2D:
		return _handler->startContour2D(attr);
	case ContourPolyline2D:
		return _handler->startContourPolyline2D(attr);
	case CoordinateDouble:
		return _handler->startCoordinateDouble(attr);
	case CoordinateInterpolator:
		return _handler->startCoordinateInterpolator(attr);
	case CoordinateInterpolator2D:
		return _handler->startCoordinateInterpolator2D(attr);
	case Cylinder:
		return _handler->startCylinder(attr);
	case CylinderSensor:
		return _handler->startCylinderSensor(attr);
	case DirectionalLight:
		return _handler->startDirectionalLight(attr);
	case Disk2D:
		return _handler->startDisk2D(attr);
	case EXPORT:
		return _handler->startEXPORT(attr);
	case ElevationGrid:
		return _handler->startElevationGrid(attr);
	case EspduTransform:
		return _handler->startEspduTransform(attr);
	case ExternProtoDeclare:
		return _handler->startExternProtoDeclare(attr);
	case Extrusion:
		return _handler->startExtrusion(attr);
	case FillProperties:
		return _handler->startFillProperties(attr);
	case Fog:
		return _handler->startFog(attr);
	case FontStyle:
		return _handler->startFontStyle(attr);
	case GeoCoordinate:
		return _handler->startGeoCoordinate(attr);
	case GeoElevationGrid:
		return _handler->startGeoElevationGrid(attr);
	case GeoLOD:
		return _handler->startGeoLOD(attr);
	case GeoLocation:
		return _handler->startGeoLocation(attr);
	case GeoMetadata:
		return _handler->startGeoMetadata(attr);
	case GeoOrigin:
		return _handler->startGeoOrigin(attr);
	case GeoPositionInterpolator:
		return _handler->startGeoPositionInterpolator(attr);
	case GeoTouchSensor:
		return _handler->startGeoTouchSensor(attr);
	case GeoViewpoint:
		return _handler->startGeoViewpoint(attr);
	case HAnimDisplacer:
		return _handler->startHAnimDisplacer(attr);
	case HAnimHumanoid:
		return _handler->startHAnimHumanoid(attr);
	case HAnimJoint:
		return _handler->startHAnimJoint(attr);
	case HAnimSegment:
		return _handler->startHAnimSegment(attr);
	case HAnimSite:
		return _handler->startHAnimSite(attr);
	case IMPORT:
		return _handler->startIMPORT(attr);
	case IS:
		return _handler->startIS(attr);
	case Inline:
		return _handler->startInline(attr);
	case IntegerSequencer:
		return _handler->startIntegerSequencer(attr);
	case IntegerTrigger:
		return _handler->startIntegerTrigger(attr);
	case KeySensor:
		return _handler->startKeySensor(attr);
	case LineProperties:
		return _handler->startLineProperties(attr);
	case LineSet:
		return _handler->startLineSet(attr);
	case LoadSensor:
		return _handler->startLoadSensor(attr);
	case MetadataDouble:
		return _handler->startMetadataDouble(attr);
	case MetadataFloat:
		return _handler->startMetadataFloat(attr);
	case MetadataInteger:
		return _handler->startMetadataInteger(attr);
	case MetadataSet:
		return _handler->startMetadataSet(attr);
	case MetadataString:
		return _handler->startMetadataString(attr);
	case MovieTexture:
		return _handler->startMovieTexture(attr);
	case NavigationInfo:
		return _handler->startNavigationInfo(attr);
	case NormalInterpolator:
		return _handler->startNormalInterpolator(attr);
	case NurbsCurve:
		return _handler->startNurbsCurve(attr);
	case NurbsCurve2D:
		return _handler->startNurbsCurve2D(attr);
	case NurbsOrientationInterpolator:
		return _handler->startNurbsOrientationInterpolator(attr);
	case NurbsPatchSurface:
		return _handler->startNurbsPatchSurface(attr);
	case NurbsPositionInterpolator:
		return _handler->startNurbsPositionInterpolator(attr);
	case NurbsSet:
		return _handler->startNurbsSet(attr);
	case NurbsSurfaceInterpolator:
		return _handler->startNurbsSurfaceInterpolator(attr);
	case NurbsSweptSurface:
		return _handler->startNurbsSweptSurface(attr);
	case NurbsSwungSurface:
		return _handler->startNurbsSwungSurface(attr);
	case NurbsTextureCoordinate:
		return _handler->startNurbsTextureCoordinate(attr);
	case NurbsTrimmedSurface:
		return _handler->startNurbsTrimmedSurface(attr);
	case OrientationInterpolator:
		return _handler->startOrientationInterpolator(attr);
	case PixelTexture:
		return _handler->startPixelTexture(attr);
	case PlaneSensor:
		return _handler->startPlaneSensor(attr);
	case PointLight:
		return _handler->startPointLight(attr);
	case Polyline2D:
		return _handler->startPolyline2D(attr);
	case Polypoint2D:
		return _handler->startPolypoint2D(attr);
	case PositionInterpolator:
		return _handler->startPositionInterpolator(attr);
	case PositionInterpolator2D:
		return _handler->startPositionInterpolator2D(attr);
	case ProtoBody:
		return _handler->startProtoBody(attr);
	case ProtoDeclare:
		return _handler->startProtoDeclare(attr);
	case ProtoInterface:
		return _handler->startProtoInterface(attr);
	case ProximitySensor:
		return _handler->startProximitySensor(attr);
	case ReceiverPdu:
		return _handler->startReceiverPdu(attr);
	case Rectangle2D:
		return _handler->startRectangle2D(attr);
	case ScalarInterpolator:
		return _handler->startScalarInterpolator(attr);
	case Scene:
		return _handler->startScene(attr);
	case SignalPdu:
		return _handler->startSignalPdu(attr);
	case Sound:
		return _handler->startSound(attr);
	case SphereSensor:
		return _handler->startSphereSensor(attr);
	case SpotLight:
		return _handler->startSpotLight(attr);
	case StringSensor:
		return _handler->startStringSensor(attr);
	case Text:
		return _handler->startText(attr);
	case TextureBackground:
		return _handler->startTextureBackground(attr);
	case TextureCoordinateGenerator:
		return _handler->startTextureCoordinateGenerator(attr);
	case TimeSensor:
		return _handler->startTimeSensor(attr);
	case TimeTrigger:
		return _handler->startTimeTrigger(attr);
	case TouchSensor:
		return _handler->startTouchSensor(attr);
	case TransmitterPdu:
		return _handler->startTransmitterPdu(attr);
	case TriangleFanSet:
		return _handler->startTriangleFanSet(attr);
	case TriangleSet:
		return _handler->startTriangleSet(attr);
	case TriangleSet2D:
		return _handler->startTriangleSet2D(attr);
	case TriangleStripSet:
		return _handler->startTriangleStripSet(attr);
	case Viewpoint:
		return _handler->startViewpoint(attr);
	case VisibilitySensor:
		return _handler->startVisibilitySensor(attr);
	case WorldInfo:
		return _handler->startWorldInfo(attr);
	case X3D:
		return _handler->startX3D(attr);
	case component:
		return _handler->startcomponent(attr);
	case connect:
		return _handler->startconnect(attr);
	case field:
		return _handler->startfield(attr);
	case head:
		return _handler->starthead(attr);
	case humanoidBodyType:
		return _handler->starthumanoidBodyType(attr);
	case meta:
		return _handler->startmeta(attr);
	case CADAssembly:
		return _handler->startCADAssembly(attr);
	case CADFace:
		return _handler->startCADFace(attr);
	case CADLayer:
		return _handler->startCADLayer(attr);
	case CADPart:
		return _handler->startCADPart(attr);
	case ComposedCubeMapTexture:
		return _handler->startComposedCubeMapTexture(attr);
	case ComposedShader:
		return _handler->startComposedShader(attr);
	case ComposedTexture3D:
		return _handler->startComposedTexture3D(attr);
	case FloatVertexAttribute:
		return _handler->startFloatVertexAttribute(attr);
	case FogCoordinate:
		return _handler->startFogCoordinate(attr);
	case GeneratedCubeMapTexture:
		return _handler->startGeneratedCubeMapTexture(attr);
	case ImageCubeMapTexture:
		return _handler->startImageCubeMapTexture(attr);
	case ImageTexture3D:
		return _handler->startImageTexture3D(attr);
	case IndexedQuadSet:
		return _handler->startIndexedQuadSet(attr);
	case LocalFog:
		return _handler->startLocalFog(attr);
	case Matrix3VertexAttribute:
		return _handler->startMatrix3VertexAttribute(attr);
	case Matrix4VertexAttribute:
		return _handler->startMatrix4VertexAttribute(attr);
	case PackagedShader:
		return _handler->startPackagedShader(attr);
	case PixelTexture3D:
		return _handler->startPixelTexture3D(attr);
	case ProgramShader:
		return _handler->startProgramShader(attr);
	case QuadSet:
		return _handler->startQuadSet(attr);
	case ShaderPart:
		return _handler->startShaderPart(attr);
	case ShaderProgram:
		return _handler->startShaderProgram(attr);
	case TextureCoordinate3D:
		return _handler->startTextureCoordinate3D(attr);
	case TextureCoordinate4D:
		return _handler->startTextureCoordinate4D(attr);
	case TextureTransform3D:
		return _handler->startTextureTransform3D(attr);
	case TextureTransformMatrix3D:
		return _handler->startTextureTransformMatrix3D(attr);
	case -1:
	default:
		return _handler->startUnknown(id, "", attr);
	};
}

int X3DSwitch::doEndElement(int id, const char* nodeName) const
{

	switch(id)
	{
	case Shape:
		return _handler->endShape();
	case Appearance:
		return _handler->endAppearance();
	case Material:
		return _handler->endMaterial();
	case IndexedFaceSet:
		return _handler->endIndexedFaceSet();
	case ProtoInstance:
		return _handler->endProtoInstance();
	case Transform:
		return _handler->endTransform();
	case ImageTexture:
		return _handler->endImageTexture();
	case TextureTransform:
		return _handler->endTextureTransform();
	case Coordinate:
		return _handler->endCoordinate();
	case Normal:
		return _handler->endNormal();
	case Color:
		return _handler->endColor();
	case ColorRGBA:
		return _handler->endColorRGBA();
	case TextureCoordinate:
		return _handler->endTextureCoordinate();
	case ROUTE:
		return _handler->endROUTE();
	case fieldValue:
		return _handler->endfieldValue();
	case Group:
		return _handler->endGroup();
	case LOD:
		return _handler->endLOD();
	case Switch:
		return _handler->endSwitch();
	case Script:
		return _handler->endScript();
	case IndexedTriangleFanSet:
		return _handler->endIndexedTriangleFanSet();
	case IndexedTriangleSet:
		return _handler->endIndexedTriangleSet();
	case IndexedTriangleStripSet:
		return _handler->endIndexedTriangleStripSet();
	case MultiTexture:
		return _handler->endMultiTexture();
	case MultiTextureCoordinate:
		return _handler->endMultiTextureCoordinate();
	case MultiTextureTransform:
		return _handler->endMultiTextureTransform();
	case IndexedLineSet:
		return _handler->endIndexedLineSet();
	case PointSet:
		return _handler->endPointSet();
	case StaticGroup:
		return _handler->endStaticGroup();
	case Sphere:
		return _handler->endSphere();
	case Box:
		return _handler->endBox();
	case Cone:
		return _handler->endCone();
	case Anchor:
		return _handler->endAnchor();
	case Arc2D:
		return _handler->endArc2D();
	case ArcClose2D:
		return _handler->endArcClose2D();
	case AudioClip:
		return _handler->endAudioClip();
	case Background:
		return _handler->endBackground();
	case Billboard:
		return _handler->endBillboard();
	case BooleanFilter:
		return _handler->endBooleanFilter();
	case BooleanSequencer:
		return _handler->endBooleanSequencer();
	case BooleanToggle:
		return _handler->endBooleanToggle();
	case BooleanTrigger:
		return _handler->endBooleanTrigger();
	case Circle2D:
		return _handler->endCircle2D();
	case Collision:
		return _handler->endCollision();
	case ColorInterpolator:
		return _handler->endColorInterpolator();
	case Contour2D:
		return _handler->endContour2D();
	case ContourPolyline2D:
		return _handler->endContourPolyline2D();
	case CoordinateDouble:
		return _handler->endCoordinateDouble();
	case CoordinateInterpolator:
		return _handler->endCoordinateInterpolator();
	case CoordinateInterpolator2D:
		return _handler->endCoordinateInterpolator2D();
	case Cylinder:
		return _handler->endCylinder();
	case CylinderSensor:
		return _handler->endCylinderSensor();
	case DirectionalLight:
		return _handler->endDirectionalLight();
	case Disk2D:
		return _handler->endDisk2D();
	case EXPORT:
		return _handler->endEXPORT();
	case ElevationGrid:
		return _handler->endElevationGrid();
	case EspduTransform:
		return _handler->endEspduTransform();
	case ExternProtoDeclare:
		return _handler->endExternProtoDeclare();
	case Extrusion:
		return _handler->endExtrusion();
	case FillProperties:
		return _handler->endFillProperties();
	case Fog:
		return _handler->endFog();
	case FontStyle:
		return _handler->endFontStyle();
	case GeoCoordinate:
		return _handler->endGeoCoordinate();
	case GeoElevationGrid:
		return _handler->endGeoElevationGrid();
	case GeoLOD:
		return _handler->endGeoLOD();
	case GeoLocation:
		return _handler->endGeoLocation();
	case GeoMetadata:
		return _handler->endGeoMetadata();
	case GeoOrigin:
		return _handler->endGeoOrigin();
	case GeoPositionInterpolator:
		return _handler->endGeoPositionInterpolator();
	case GeoTouchSensor:
		return _handler->endGeoTouchSensor();
	case GeoViewpoint:
		return _handler->endGeoViewpoint();
	case HAnimDisplacer:
		return _handler->endHAnimDisplacer();
	case HAnimHumanoid:
		return _handler->endHAnimHumanoid();
	case HAnimJoint:
		return _handler->endHAnimJoint();
	case HAnimSegment:
		return _handler->endHAnimSegment();
	case HAnimSite:
		return _handler->endHAnimSite();
	case IMPORT:
		return _handler->endIMPORT();
	case IS:
		return _handler->endIS();
	case Inline:
		return _handler->endInline();
	case IntegerSequencer:
		return _handler->endIntegerSequencer();
	case IntegerTrigger:
		return _handler->endIntegerTrigger();
	case KeySensor:
		return _handler->endKeySensor();
	case LineProperties:
		return _handler->endLineProperties();
	case LineSet:
		return _handler->endLineSet();
	case LoadSensor:
		return _handler->endLoadSensor();
	case MetadataDouble:
		return _handler->endMetadataDouble();
	case MetadataFloat:
		return _handler->endMetadataFloat();
	case MetadataInteger:
		return _handler->endMetadataInteger();
	case MetadataSet:
		return _handler->endMetadataSet();
	case MetadataString:
		return _handler->endMetadataString();
	case MovieTexture:
		return _handler->endMovieTexture();
	case NavigationInfo:
		return _handler->endNavigationInfo();
	case NormalInterpolator:
		return _handler->endNormalInterpolator();
	case NurbsCurve:
		return _handler->endNurbsCurve();
	case NurbsCurve2D:
		return _handler->endNurbsCurve2D();
	case NurbsOrientationInterpolator:
		return _handler->endNurbsOrientationInterpolator();
	case NurbsPatchSurface:
		return _handler->endNurbsPatchSurface();
	case NurbsPositionInterpolator:
		return _handler->endNurbsPositionInterpolator();
	case NurbsSet:
		return _handler->endNurbsSet();
	case NurbsSurfaceInterpolator:
		return _handler->endNurbsSurfaceInterpolator();
	case NurbsSweptSurface:
		return _handler->endNurbsSweptSurface();
	case NurbsSwungSurface:
		return _handler->endNurbsSwungSurface();
	case NurbsTextureCoordinate:
		return _handler->endNurbsTextureCoordinate();
	case NurbsTrimmedSurface:
		return _handler->endNurbsTrimmedSurface();
	case OrientationInterpolator:
		return _handler->endOrientationInterpolator();
	case PixelTexture:
		return _handler->endPixelTexture();
	case PlaneSensor:
		return _handler->endPlaneSensor();
	case PointLight:
		return _handler->endPointLight();
	case Polyline2D:
		return _handler->endPolyline2D();
	case Polypoint2D:
		return _handler->endPolypoint2D();
	case PositionInterpolator:
		return _handler->endPositionInterpolator();
	case PositionInterpolator2D:
		return _handler->endPositionInterpolator2D();
	case ProtoBody:
		return _handler->endProtoBody();
	case ProtoDeclare:
		return _handler->endProtoDeclare();
	case ProtoInterface:
		return _handler->endProtoInterface();
	case ProximitySensor:
		return _handler->endProximitySensor();
	case ReceiverPdu:
		return _handler->endReceiverPdu();
	case Rectangle2D:
		return _handler->endRectangle2D();
	case ScalarInterpolator:
		return _handler->endScalarInterpolator();
	case Scene:
		return _handler->endScene();
	case SignalPdu:
		return _handler->endSignalPdu();
	case Sound:
		return _handler->endSound();
	case SphereSensor:
		return _handler->endSphereSensor();
	case SpotLight:
		return _handler->endSpotLight();
	case StringSensor:
		return _handler->endStringSensor();
	case Text:
		return _handler->endText();
	case TextureBackground:
		return _handler->endTextureBackground();
	case TextureCoordinateGenerator:
		return _handler->endTextureCoordinateGenerator();
	case TimeSensor:
		return _handler->endTimeSensor();
	case TimeTrigger:
		return _handler->endTimeTrigger();
	case TouchSensor:
		return _handler->endTouchSensor();
	case TransmitterPdu:
		return _handler->endTransmitterPdu();
	case TriangleFanSet:
		return _handler->endTriangleFanSet();
	case TriangleSet:
		return _handler->endTriangleSet();
	case TriangleSet2D:
		return _handler->endTriangleSet2D();
	case TriangleStripSet:
		return _handler->endTriangleStripSet();
	case Viewpoint:
		return _handler->endViewpoint();
	case VisibilitySensor:
		return _handler->endVisibilitySensor();
	case WorldInfo:
		return _handler->endWorldInfo();
	case X3D:
		return _handler->endX3D();
	case component:
		return _handler->endcomponent();
	case connect:
		return _handler->endconnect();
	case field:
		return _handler->endfield();
	case head:
		return _handler->endhead();
	case humanoidBodyType:
		return _handler->endhumanoidBodyType();
	case meta:
		return _handler->endmeta();
	case CADAssembly:
		return _handler->endCADAssembly();
	case CADFace:
		return _handler->endCADFace();
	case CADLayer:
		return _handler->endCADLayer();
	case CADPart:
		return _handler->endCADPart();
	case ComposedCubeMapTexture:
		return _handler->endComposedCubeMapTexture();
	case ComposedShader:
		return _handler->endComposedShader();
	case ComposedTexture3D:
		return _handler->endComposedTexture3D();
	case FloatVertexAttribute:
		return _handler->endFloatVertexAttribute();
	case FogCoordinate:
		return _handler->endFogCoordinate();
	case GeneratedCubeMapTexture:
		return _handler->endGeneratedCubeMapTexture();
	case ImageCubeMapTexture:
		return _handler->endImageCubeMapTexture();
	case ImageTexture3D:
		return _handler->endImageTexture3D();
	case IndexedQuadSet:
		return _handler->endIndexedQuadSet();
	case LocalFog:
		return _handler->endLocalFog();
	case Matrix3VertexAttribute:
		return _handler->endMatrix3VertexAttribute();
	case Matrix4VertexAttribute:
		return _handler->endMatrix4VertexAttribute();
	case PackagedShader:
		return _handler->endPackagedShader();
	case PixelTexture3D:
		return _handler->endPixelTexture3D();
	case ProgramShader:
		return _handler->endProgramShader();
	case QuadSet:
		return _handler->endQuadSet();
	case ShaderPart:
		return _handler->endShaderPart();
	case ShaderProgram:
		return _handler->endShaderProgram();
	case TextureCoordinate3D:
		return _handler->endTextureCoordinate3D();
	case TextureCoordinate4D:
		return _handler->endTextureCoordinate4D();
	case TextureTransform3D:
		return _handler->endTextureTransform3D();
	case TextureTransformMatrix3D:
		return _handler->endTextureTransformMatrix3D();
	case -1:
	default:
		return _handler->endUnknown(id, nodeName);
	};
}
// END GENERATED
}
